@model List<HRD.Web.Models.DTOs.PayrollResponse>
@{
    ViewData["Title"] = "Grafik & Analisis Gaji";
    var currentYear = ViewBag.Year ?? DateTime.Now.Year;
    var previousYear = ViewBag.PreviousYear ?? DateTime.Now.Year - 1;
    var availableYears = ViewBag.Years as List<int> ?? new List<int>();
    var employee = ViewBag.Employee as HRD.Web.Models.DTOs.KaryawanResponse;
    var analytics = ViewBag.Analytics;
}

<!-- Custom CSS untuk Salary History Analytics Page -->
<style>
    /* Aegislabs Theme Variables */
    :root {
        --aegis-red: #ff4061;
        --aegis-white: #ffffff;
        --aegis-red-hover: #e5395a;
        --aegis-red-light: rgba(255, 64, 97, 0.1);
        --aegis-red-shadow: rgba(255, 64, 97, 0.3);
        --aegis-dark: #2c3e50;
        --aegis-gray: #f8f9fa;
    }

    /* Main Container */
    .salary-analytics-container {
        background: linear-gradient(135deg, var(--aegis-gray), #e9ecef);
        min-height: 100vh;
        padding: 2rem 0;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--aegis-red), #ff6b85);
        color: var(--aegis-white);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px var(--aegis-red-shadow);
        position: relative;
        overflow: hidden;
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -20%;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        transform: scale(0.8);
    }

    .page-header h1 {
        margin: 0;
        font-size: 2rem;
        font-weight: 700;
        position: relative;
        z-index: 2;
    }

    .page-header p {
        margin: 0.75rem 0 0 0;
        opacity: 0.9;
        font-size: 1rem;
        position: relative;
        z-index: 2;
    }

    .page-header i {
        font-size: 2.2rem;
        margin-right: 0.75rem;
        position: relative;
        z-index: 2;
    }

    /* Employee Info */
    .employee-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex-wrap: wrap;
        opacity: 0.95;
        position: relative;
        z-index: 2;
    }

    .employee-info .info-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: rgba(255, 255, 255, 0.1);
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
    }

    /* Action Buttons */
    .btn-action-header {
        background: var(--aegis-white);
        color: var(--aegis-red);
        border: 3px solid var(--aegis-white);
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 700;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(255, 255, 255, 0.3);
        position: relative;
        z-index: 2;
        margin-left: 0.5rem;
    }

    .btn-action-header:hover {
        background: transparent;
        color: var(--aegis-white);
        border-color: var(--aegis-white);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(255, 255, 255, 0.4);
    }

    .btn-action-header.secondary {
        background: transparent;
        border-color: var(--aegis-white);
        color: var(--aegis-white);
    }

    .btn-action-header.secondary:hover {
        background: var(--aegis-white);
        color: var(--aegis-red);
    }

    /* Filter Card */
    .filter-card {
        background: var(--aegis-white);
        border-radius: 15px;
        border: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 2rem;
    }

    .filter-card .card-body {
        padding: 1.5rem;
    }

    .form-label {
        font-weight: 600;
        color: var(--aegis-dark);
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-label i {
        color: var(--aegis-red);
        font-size: 1.1rem;
    }

    .form-select {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
    }

    .form-select:focus {
        border-color: var(--aegis-red);
        box-shadow: 0 0 0 0.2rem var(--aegis-red-light);
    }

    .btn-filter {
        background: linear-gradient(135deg, var(--aegis-red), #ff6b85);
        border: none;
        border-radius: 10px;
        color: white;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px var(--aegis-red-shadow);
    }

    .btn-filter:hover {
        background: linear-gradient(135deg, var(--aegis-red-hover), #e5395a);
        transform: translateY(-2px);
        color: white;
        box-shadow: 0 6px 20px var(--aegis-red-shadow);
    }

    /* Analytics Cards */
    .analytics-card {
        background: var(--aegis-white);
        border-radius: 15px;
        border: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
        height: 100%;
    }

    .analytics-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    }

    .analytics-card-body {
        padding: 1.5rem;
        position: relative;
        z-index: 2;
    }

    .analytics-card.primary {
        background: linear-gradient(135deg, var(--aegis-red), #ff6b85);
        color: var(--aegis-white);
    }

    .analytics-card.success {
        background: linear-gradient(135deg, #10b981, #059669);
        color: var(--aegis-white);
    }

    .analytics-card.info {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
        color: var(--aegis-white);
    }

    .analytics-card.warning {
        background: linear-gradient(135deg, #f59e0b, #d97706);
        color: var(--aegis-white);
    }

    .analytics-number {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
    }

    .analytics-label {
        font-size: 0.8rem;
        margin: 0;
        opacity: 0.9;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .analytics-growth {
        font-size: 0.85rem;
        opacity: 0.85;
    }

    .analytics-icon {
        font-size: 2.5rem;
        opacity: 0.9;
    }

    /* Chart Cards */
    .chart-card {
        background: var(--aegis-white);
        border-radius: 20px;
        border: none;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 2rem;
        transition: all 0.3s ease;
    }

    .chart-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
    }

    .chart-card-header {
        background: var(--aegis-red-light);
        color: var(--aegis-red);
        padding: 1.5rem 2rem;
        border-bottom: 1px solid rgba(255, 64, 97, 0.2);
        font-weight: 600;
        font-size: 1.1rem;
    }

    .chart-card-body {
        padding: 2rem;
    }

    /* Chart Type Switcher */
    .chart-type-switcher .btn-check:checked + .btn {
        background: var(--aegis-red);
        border-color: var(--aegis-red);
        color: white;
    }

    .chart-type-switcher .btn {
        border: 2px solid var(--aegis-red);
        color: var(--aegis-red);
        font-size: 0.8rem;
        padding: 0.375rem 0.75rem;
        transition: all 0.3s ease;
    }

    .chart-type-switcher .btn:hover {
        background: var(--aegis-red);
        color: white;
    }

    /* Composition Legend */
    .composition-legend {
        margin-top: 1rem;
    }

    .legend-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.75rem;
        padding: 0.5rem;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .legend-item:hover {
        background: var(--aegis-red-light);
    }

    .legend-color {
        width: 12px;
        height: 12px;
        border-radius: 2px;
        margin-right: 0.75rem;
    }

    /* Table Styling */
    .analytics-table {
        background: var(--aegis-white);
        border-radius: 20px;
        border: none;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .analytics-table-header {
        background: var(--aegis-red-light);
        color: var(--aegis-red);
        padding: 1.5rem 2rem;
        border-bottom: 1px solid rgba(255, 64, 97, 0.2);
        font-weight: 600;
        font-size: 1.1rem;
    }

    .custom-table {
        margin: 0;
    }

    .custom-table thead th {
        background: var(--aegis-red-light);
        color: var(--aegis-red);
        border: none;
        padding: 1rem;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .custom-table tbody td {
        border: none;
        padding: 1rem;
        vertical-align: middle;
        border-bottom: 1px solid #f8f9fa;
    }

    .custom-table tbody tr:hover {
        background: var(--aegis-red-light);
    }

    .custom-table tbody tr:last-child td {
        border-bottom: none;
    }

    /* Month Display */
    .month-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .month-icon {
        width: 50px;
        height: 50px;
        background: var(--aegis-red-light);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--aegis-red);
        font-size: 1.2rem;
    }

    /* Status & Growth Badges */
    .growth-badge {
        padding: 0.375rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
    }

    .growth-positive {
        background: #dcfce7;
        color: #059669;
        border: 1px solid #bbf7d0;
    }

    .growth-negative {
        background: #fee2e2;
        color: #dc2626;
        border: 1px solid #fecaca;
    }

    .growth-neutral {
        background: #f1f5f9;
        color: #64748b;
        border: 1px solid #e2e8f0;
    }

    .status-badge-paid {
        background: #dcfce7;
        color: #059669;
        border: 1px solid #bbf7d0;
    }

    .status-badge-pending {
        background: #fef3c7;
        color: #d97706;
        border: 1px solid #fed7aa;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: var(--aegis-white);
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

    .empty-state::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 5px;
        background: linear-gradient(90deg, var(--aegis-red), #ff6b85);
    }

    .empty-state i {
        font-size: 5rem;
        color: #dee2e6;
        margin-bottom: 1.5rem;
    }

    .empty-state h4 {
        color: var(--aegis-dark);
        margin-bottom: 1rem;
        font-weight: 600;
    }

    .empty-state p {
        color: #6c757d;
        margin-bottom: 2rem;
        font-size: 1.1rem;
    }

    .btn-empty-action {
        background: linear-gradient(135deg, var(--aegis-red), #ff6b85);
        border: none;
        border-radius: 12px;
        color: white;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px var(--aegis-red-shadow);
        margin: 0 0.5rem;
    }

    .btn-empty-action:hover {
        background: linear-gradient(135deg, var(--aegis-red-hover), #e5395a);
        transform: translateY(-2px);
        color: white;
        box-shadow: 0 6px 20px var(--aegis-red-shadow);
    }

    .btn-empty-action.secondary {
        background: transparent;
        border: 2px solid var(--aegis-red);
        color: var(--aegis-red);
        box-shadow: none;
    }

    .btn-empty-action.secondary:hover {
        background: var(--aegis-red);
        color: white;
    }

    /* Alert Styling */
    .alert {
        border-radius: 12px;
        border: none;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .alert-danger {
        background: #ffe6ea;
        color: #721c24;
        border-left: 4px solid #dc3545;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .salary-analytics-container {
            padding: 1rem 0;
        }
        
        .page-header {
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .page-header h1 {
            font-size: 1.5rem;
        }
        
        .employee-info {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
        
        .analytics-card-body {
            padding: 1rem;
        }
        
        .analytics-number {
            font-size: 1.75rem;
        }
        
        .chart-card-body {
            padding: 1rem;
        }
        
        .custom-table {
            font-size: 0.85rem;
        }
        
        .custom-table thead th,
        .custom-table tbody td {
            padding: 0.75rem 0.5rem;
        }
        
        .month-info {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
        
        .month-icon {
            width: 40px;
            height: 40px;
            font-size: 1rem;
        }
        
        .empty-state {
            padding: 2rem 1rem;
        }
    }

    /* Animation */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-in {
        animation: fadeInUp 0.6s ease-out;
    }

    /* Chart Animation Enhancement */
    .chart-container {
        position: relative;
        overflow: hidden;
    }

    .chart-container::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
        animation: shimmer 2s infinite;
    }

    @@keyframes shimmer {
        0% { left: -100%; }
        100% { left: 100%; }
    }
</style>

<div class="salary-analytics-container">
<div class="container-fluid px-4">
        <!-- Page Header -->
        <div class="page-header animate-in">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <h1>
                        <i class="bi bi-graph-up"></i>
                        Grafik & Analisis Gaji Aegislabs
                    </h1>
                    @if (employee != null)
                    {
                        <div class="employee-info">
                            <div class="info-item">
                                <i class="bi bi-person"></i>
                                <span>@employee.NamaLengkap</span>
                            </div>
                            <div class="info-item">
                                <i class="bi bi-card-text"></i>
                                <span>@employee.NIK</span>
                            </div>
                            <div class="info-item">
                                <i class="bi bi-briefcase"></i>
                                <span>@employee.Posisi</span>
                            </div>
                        </div>
                    }
                </div>
                <div class="d-flex">
                    <a href="@Url.Action("PayslipHistory", "Employee")" class="btn btn-action-header secondary">
                        <i class="bi bi-table"></i> Riwayat Tabel
                    </a>
                    <a href="@Url.Action("CurrentPayslip", "Employee")" class="btn btn-action-header">
                        <i class="bi bi-receipt-cutoff"></i> Slip Terkini
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-md-6">
                <div class="card filter-card animate-in" style="animation-delay: 0.1s;">
                <div class="card-body">
                    <form method="get" class="d-flex align-items-end gap-3">
                        <div class="flex-grow-1">
                                <label for="tahun" class="form-label">
                                    <i class="bi bi-calendar3"></i>
                                    Tahun Analisis
                            </label>
                            <select id="tahun" name="tahun" class="form-select" onchange="this.form.submit()">
                                @foreach (var year in availableYears)
                                {
                                        @if (year == currentYear)
                                    {
                                        <option value="@year" selected>@year</option>
                                    }
                                    else
                                    {
                                        <option value="@year">@year</option>
                                    }
                                }
                            </select>
                        </div>
                        <div>
                                <button type="submit" class="btn btn-filter">
                                    <i class="bi bi-bar-chart"></i> Analisis
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

        <!-- Error Alert -->
    @if (!string.IsNullOrEmpty(ViewBag.Error))
    {
            <div class="alert alert-danger alert-dismissible fade show animate-in" role="alert" style="animation-delay: 0.2s;">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @ViewBag.Error
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <!-- Analytics Cards -->
        <div class="row mb-4">
            <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card analytics-card primary animate-in" style="animation-delay: 0.3s;">
                        <div class="analytics-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                    <h6 class="analytics-label">Total Gaji @currentYear</h6>
                                    <h3 class="analytics-number">Rp @analytics.CurrentYear.TotalSalary.ToString("N0")</h3>
                                @if (analytics.PreviousYear.TotalSalary > 0)
                                {
                                    var growth = ((analytics.CurrentYear.TotalSalary - analytics.PreviousYear.TotalSalary) / analytics.PreviousYear.TotalSalary) * 100;
                                        <small class="analytics-growth">
                                        @if (growth >= 0)
                                        {
                                            <i class="bi bi-arrow-up"></i> @($"+{growth:F1}% dari {previousYear}")
                                        }
                                        else
                                        {
                                            <i class="bi bi-arrow-down"></i> @($"{growth:F1}% dari {previousYear}")
                                        }
                                    </small>
                                }
                            </div>
                                <div>
                                    <i class="bi bi-currency-dollar analytics-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card analytics-card success animate-in" style="animation-delay: 0.4s;">
                        <div class="analytics-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                    <h6 class="analytics-label">Rata-rata Bulanan</h6>
                                    <h3 class="analytics-number">Rp @analytics.CurrentYear.AverageSalary.ToString("N0")</h3>
                                    <small class="analytics-growth">@analytics.CurrentYear.TotalPayslips bulan data</small>
                            </div>
                                <div>
                                    <i class="bi bi-graph-up-arrow analytics-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card analytics-card info animate-in" style="animation-delay: 0.5s;">
                        <div class="analytics-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                    <h6 class="analytics-label">Gaji Tertinggi</h6>
                                    <h3 class="analytics-number">Rp @analytics.CurrentYear.HighestSalary.ToString("N0")</h3>
                                    <small class="analytics-growth">Pencapaian terbaik</small>
                            </div>
                                <div>
                                    <i class="bi bi-trophy-fill analytics-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-3">
                    <div class="card analytics-card warning animate-in" style="animation-delay: 0.6s;">
                        <div class="analytics-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                    <h6 class="analytics-label">Total Tunjangan</h6>
                                    <h3 class="analytics-number">Rp @analytics.CurrentYear.TotalAllowances.ToString("N0")</h3>
                                    <small class="analytics-growth">Benefit tambahan</small>
                            </div>
                                <div>
                                    <i class="bi bi-gift-fill analytics-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Charts Row -->
        <div class="row mb-4">
            <!-- Salary Trend Chart -->
            <div class="col-lg-8 mb-4">
                    <div class="card chart-card animate-in" style="animation-delay: 0.7s;">
                        <div class="chart-card-header">
                        <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">
                                    <i class="bi bi-graph-up"></i>
                                Tren Gaji @currentYear
                            </h5>
                                <div class="btn-group btn-group-sm chart-type-switcher" role="group">
                                <input type="radio" class="btn-check" name="chartType" id="line" checked>
                                <label class="btn btn-outline-primary" for="line">Line</label>
                                <input type="radio" class="btn-check" name="chartType" id="bar">
                                <label class="btn btn-outline-primary" for="bar">Bar</label>
                                <input type="radio" class="btn-check" name="chartType" id="area">
                                <label class="btn btn-outline-primary" for="area">Area</label>
                            </div>
                        </div>
                    </div>
                        <div class="chart-card-body">
                            <div class="chart-container">
                        <canvas id="salaryTrendChart" height="300"></canvas>
                    </div>
                </div>
            </div>
                </div>

                <!-- Salary Composition Chart -->
            <div class="col-lg-4 mb-4">
                    <div class="card chart-card animate-in" style="animation-delay: 0.8s;">
                        <div class="chart-card-header">
                            <h5 class="mb-0">
                                <i class="bi bi-pie-chart-fill"></i>
                            Komposisi Rata-rata
                        </h5>
                    </div>
                        <div class="chart-card-body">
                        <canvas id="compositionChart" height="300"></canvas>
                            <div class="composition-legend">
                                <div class="legend-item">
                                <span class="d-flex align-items-center">
                                        <span class="legend-color" style="background: #10b981;"></span>
                                    Gaji Pokok
                                </span>
                                    <span class="fw-semibold">Rp @((Model.Any() ? Model.Average(p => p.GajiPokok) : 0).ToString("N0"))</span>
                            </div>
                                <div class="legend-item">
                                <span class="d-flex align-items-center">
                                        <span class="legend-color" style="background: #3b82f6;"></span>
                                    Tunjangan
                                </span>
                                    <span class="fw-semibold">Rp @((Model.Any() ? Model.Average(p => p.Tunjangan) : 0).ToString("N0"))</span>
                            </div>
                                <div class="legend-item">
                                <span class="d-flex align-items-center">
                                        <span class="legend-color" style="background: #f59e0b;"></span>
                                    Potongan
                                </span>
                                    <span class="fw-semibold">-Rp @((Model.Any() ? Model.Average(p => p.Potongan) : 0).ToString("N0"))</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Secondary Charts Row -->
        <div class="row mb-4">
            <!-- Monthly Growth Chart -->
            <div class="col-lg-6 mb-4">
                    <div class="card chart-card animate-in" style="animation-delay: 0.9s;">
                        <div class="chart-card-header">
                            <h5 class="mb-0">
                                <i class="bi bi-arrow-up-right"></i>
                            Pertumbuhan Bulanan
                        </h5>
                    </div>
                        <div class="chart-card-body">
                        <canvas id="growthChart" height="250"></canvas>
                    </div>
                </div>
            </div>

            <!-- Year Comparison Chart -->
            <div class="col-lg-6 mb-4">
                    <div class="card chart-card animate-in" style="animation-delay: 1.0s;">
                        <div class="chart-card-header">
                            <h5 class="mb-0">
                                <i class="bi bi-bar-chart"></i>
                            Perbandingan @previousYear vs @currentYear
                        </h5>
                    </div>
                        <div class="chart-card-body">
                        <canvas id="comparisonChart" height="250"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Detailed Analytics Table -->
        <div class="row">
            <div class="col-12">
                    <div class="card analytics-table animate-in" style="animation-delay: 1.1s;">
                        <div class="analytics-table-header">
                            <h5 class="mb-0">
                                <i class="bi bi-table"></i>
                            Detail Analisis @currentYear
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                                <table class="table custom-table">
                                    <thead>
                                    <tr>
                                            <th>Bulan</th>
                                            <th class="text-end">Gaji Pokok</th>
                                            <th class="text-end">Tunjangan</th>
                                            <th class="text-end">Potongan</th>
                                            <th class="text-end">Total Gaji</th>
                                            <th class="text-center">Growth</th>
                                            <th class="text-center">Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var sortedData = Model.OrderBy(p => p.Bulan).ToList();
                                        decimal previousSalary = 0;
                                    }
                                    @foreach (var payslip in sortedData)
                                    {
                                        var growth = previousSalary > 0 ? ((payslip.TotalGaji - previousSalary) / previousSalary) * 100 : 0;
                                        var monthName = System.Globalization.CultureInfo.GetCultureInfo("id-ID").DateTimeFormat.GetMonthName(payslip.Bulan);
                                        
                                        <tr>
                                                <td>
                                                    <div class="month-info">
                                                        <div class="month-icon">
                                                            <i class="bi bi-calendar-month"></i>
                                                    </div>
                                                    <span class="fw-semibold">@monthName</span>
                                                </div>
                                            </td>
                                                <td class="text-end fw-semibold" style="color: #10b981;">Rp @payslip.GajiPokok.ToString("N0")</td>
                                                <td class="text-end fw-semibold" style="color: #3b82f6;">Rp @payslip.Tunjangan.ToString("N0")</td>
                                                <td class="text-end fw-semibold" style="color: #f59e0b;">Rp @payslip.Potongan.ToString("N0")</td>
                                                <td class="text-end fw-bold" style="color: var(--aegis-red);">Rp @payslip.TotalGaji.ToString("N0")</td>
                                                <td class="text-center">
                                                @if (previousSalary > 0)
                                                {
                                                    if (growth >= 0)
                                                    {
                                                            <span class="growth-badge growth-positive">
                                                                <i class="bi bi-arrow-up"></i>@growth.ToString("F1")%
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                            <span class="growth-badge growth-negative">
                                                                <i class="bi bi-arrow-down"></i>@growth.ToString("F1")%
                                                        </span>
                                                    }
                                                }
                                                else
                                                {
                                                        <span class="growth-badge growth-neutral">
                                                        <i class="bi bi-dash"></i>
                                                    </span>
                                                }
                                            </td>
                                                <td class="text-center">
                                                @if (payslip.StatusBayar == "Sudah Bayar")
                                                {
                                                        <span class="growth-badge status-badge-paid">
                                                            <i class="bi bi-check-circle"></i>Paid
                                                    </span>
                                                }
                                                else
                                                {
                                                        <span class="growth-badge status-badge-pending">
                                                            <i class="bi bi-clock"></i>Pending
                                                    </span>
                                                }
                                            </td>
                                        </tr>
                                        
                                        previousSalary = payslip.TotalGaji;
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    else
    {
            <!-- Empty State -->
            <div class="empty-state animate-in" style="animation-delay: 0.3s;">
                <i class="bi bi-graph-down"></i>
                <h4>Belum Ada Data Gaji untuk Analisis</h4>
                <p>
                    Belum ada data gaji yang tersedia untuk tahun @currentYear. 
                    Data akan muncul setelah HRD memproses payroll bulanan.
                </p>
                <div class="d-flex justify-content-center gap-3">
                    <a href="@Url.Action("EmployeeDashboard", "Home")" class="btn btn-empty-action">
                        <i class="bi bi-house"></i> Kembali ke Dashboard
                    </a>
                    <a href="@Url.Action("PayslipHistory", "Employee")" class="btn btn-empty-action secondary">
                        <i class="bi bi-table"></i> Lihat Riwayat
                    </a>
                </div>
            </div>
        </div>
    }
</div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@section Scripts {
<script>
document.addEventListener('DOMContentLoaded', function() {
    @if (Model != null && Model.Any())
    {
        <text>
        // Prepare data
        const salaryData = @Html.Raw(Json.Serialize(Model.OrderBy(p => p.Bulan).Select(p => new { 
            month = p.Bulan, 
            monthName = System.Globalization.CultureInfo.GetCultureInfo("id-ID").DateTimeFormat.GetMonthName(p.Bulan),
            totalGaji = p.TotalGaji,
            gajiPokok = p.GajiPokok,
            tunjangan = p.Tunjangan,
            potongan = p.Potongan
        })));

        const months = salaryData.map(d => d.monthName);
        const totalSalaries = salaryData.map(d => d.totalGaji);
        const basicSalaries = salaryData.map(d => d.gajiPokok);
        const allowances = salaryData.map(d => d.tunjangan);
        const deductions = salaryData.map(d => d.potongan);

                // Aegislabs Chart Colors
                const aegislabsColors = {
                    primary: '#ff4061',
                    success: '#10b981', 
                    info: '#3b82f6',
                    warning: '#f59e0b',
                    danger: '#dc3545',
                    primaryLight: 'rgba(255, 64, 97, 0.1)'
        };

        // 1. Salary Trend Chart (Dynamic Type Switching)
        let salaryTrendChart;
        const initSalaryTrendChart = (type = 'line') => {
            const ctx = document.getElementById('salaryTrendChart').getContext('2d');
            
            if (salaryTrendChart) {
                salaryTrendChart.destroy();
            }

            const config = {
                type: type,
                data: {
                    labels: months,
                    datasets: [{
                        label: 'Total Gaji',
                        data: totalSalaries,
                                borderColor: aegislabsColors.primary,
                                backgroundColor: type === 'line' ? aegislabsColors.primaryLight : aegislabsColors.primary,
                        borderWidth: 3,
                        fill: type === 'line',
                                tension: 0.4,
                                pointBackgroundColor: aegislabsColors.primary,
                                pointBorderColor: '#ffffff',
                                pointBorderWidth: 2,
                                pointRadius: 5,
                                pointHoverRadius: 7
                    }, {
                        label: 'Gaji Pokok',
                        data: basicSalaries,
                                borderColor: aegislabsColors.success,
                                backgroundColor: type === 'line' ? 'rgba(16, 185, 129, 0.1)' : aegislabsColors.success,
                        borderWidth: 2,
                        fill: false,
                                tension: 0.4,
                                pointBackgroundColor: aegislabsColors.success,
                                pointBorderColor: '#ffffff',
                                pointBorderWidth: 2,
                                pointRadius: 4,
                                pointHoverRadius: 6
                    }, {
                        label: 'Tunjangan',
                        data: allowances,
                                borderColor: aegislabsColors.info,
                                backgroundColor: type === 'line' ? 'rgba(59, 130, 246, 0.1)' : aegislabsColors.info,
                        borderWidth: 2,
                        fill: false,
                                tension: 0.4,
                                pointBackgroundColor: aegislabsColors.info,
                                pointBorderColor: '#ffffff',
                                pointBorderWidth: 2,
                                pointRadius: 4,
                                pointHoverRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                                    labels: {
                                        usePointStyle: true,
                                        padding: 20,
                                        font: {
                                            size: 12,
                                            weight: '600'
                                        }
                                    }
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                                    backgroundColor: 'rgba(44, 62, 80, 0.9)',
                                    titleColor: '#ffffff',
                                    bodyColor: '#ffffff',
                                    borderColor: aegislabsColors.primary,
                                    borderWidth: 1,
                                    cornerRadius: 8,
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': Rp ' + context.parsed.y.toLocaleString('id-ID');
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                                    grid: {
                                        color: 'rgba(0,0,0,0.05)',
                                        drawBorder: false
                                    },
                            ticks: {
                                callback: function(value) {
                                    return 'Rp ' + value.toLocaleString('id-ID');
                                        },
                                        color: '#6c757d',
                                        font: {
                                            size: 11
                                        }
                                    }
                                },
                                x: {
                                    grid: {
                                        display: false
                                    },
                                    ticks: {
                                        color: '#6c757d',
                                        font: {
                                            size: 11,
                                            weight: '500'
                                }
                            }
                        }
                    },
                    interaction: {
                        mode: 'nearest',
                        axis: 'x',
                        intersect: false
                            },
                            elements: {
                                line: {
                                    borderJoinStyle: 'round'
                                }
                    }
                }
            };

            salaryTrendChart = new Chart(ctx, config);
        };

        // Initialize with line chart
        initSalaryTrendChart('line');

        // Chart type switcher
        document.querySelectorAll('input[name="chartType"]').forEach(radio => {
            radio.addEventListener('change', function() {
                initSalaryTrendChart(this.id);
                        showNotification(`Chart type changed to ${this.id}`, 'info');
            });
        });

        // 2. Composition Pie Chart
        const avgBasic = salaryData.reduce((sum, d) => sum + d.gajiPokok, 0) / salaryData.length;
        const avgAllowances = salaryData.reduce((sum, d) => sum + d.tunjangan, 0) / salaryData.length;
        const avgDeductions = salaryData.reduce((sum, d) => sum + d.potongan, 0) / salaryData.length;

        new Chart(document.getElementById('compositionChart'), {
            type: 'doughnut',
            data: {
                labels: ['Gaji Pokok', 'Tunjangan', 'Potongan'],
                datasets: [{
                    data: [avgBasic, avgAllowances, avgDeductions],
                            backgroundColor: [aegislabsColors.success, aegislabsColors.info, aegislabsColors.warning],
                    borderWidth: 0,
                    hoverBorderWidth: 3,
                            hoverBorderColor: '#ffffff',
                            hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                                backgroundColor: 'rgba(44, 62, 80, 0.9)',
                                titleColor: '#ffffff',
                                bodyColor: '#ffffff',
                                borderColor: aegislabsColors.primary,
                                borderWidth: 1,
                                cornerRadius: 8,
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((context.parsed / total) * 100).toFixed(1);
                                return context.label + ': Rp ' + context.parsed.toLocaleString('id-ID') + ' (' + percentage + '%)';
                            }
                        }
                    }
                },
                        cutout: '60%',
                        animation: {
                            animateRotate: true,
                            animateScale: true,
                            duration: 2000,
                            easing: 'easeInOutQuart'
                        }
            }
        });

        // 3. Monthly Growth Chart
        const growthData = [];
        for (let i = 1; i < totalSalaries.length; i++) {
            const growth = ((totalSalaries[i] - totalSalaries[i-1]) / totalSalaries[i-1]) * 100;
            growthData.push(growth);
        }

        new Chart(document.getElementById('growthChart'), {
            type: 'bar',
            data: {
                        labels: months.slice(1),
                datasets: [{
                    label: 'Pertumbuhan (%)',
                    data: growthData,
                            backgroundColor: growthData.map(g => g >= 0 ? 'rgba(16, 185, 129, 0.8)' : 'rgba(239, 68, 68, 0.8)'),
                            borderColor: growthData.map(g => g >= 0 ? aegislabsColors.success : aegislabsColors.danger),
                            borderWidth: 2,
                            borderRadius: 6,
                            borderSkipped: false,
                            hoverBackgroundColor: growthData.map(g => g >= 0 ? aegislabsColors.success : aegislabsColors.danger)
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                                backgroundColor: 'rgba(44, 62, 80, 0.9)',
                                titleColor: '#ffffff',
                                bodyColor: '#ffffff',
                                borderColor: aegislabsColors.primary,
                                borderWidth: 1,
                                cornerRadius: 8,
                        callbacks: {
                            label: function(context) {
                                const value = context.parsed.y;
                                const sign = value >= 0 ? '+' : '';
                                return 'Pertumbuhan: ' + sign + value.toFixed(1) + '%';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                                grid: {
                                    color: 'rgba(0,0,0,0.05)',
                                    drawBorder: false
                                },
                        ticks: {
                            callback: function(value) {
                                return value + '%';
                                    },
                                    color: '#6c757d',
                                    font: {
                                        size: 11
                            }
                        },
                        grid: {
                            color: 'rgba(0,0,0,0.1)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                                },
                                ticks: {
                                    color: '#6c757d',
                                    font: {
                                        size: 11,
                                        weight: '500'
                                    }
                        }
                    }
                        },
                        animation: {
                            duration: 1500,
                            easing: 'easeInOutQuart'
                }
            }
        });

        // 4. Year Comparison Chart
        const currentYearAvg = totalSalaries.reduce((a, b) => a + b, 0) / totalSalaries.length;
        const previousYearAvg = @analytics.PreviousYear.AverageSalary;

        new Chart(document.getElementById('comparisonChart'), {
            type: 'bar',
            data: {
                labels: ['@previousYear', '@currentYear'],
                datasets: [{
                    label: 'Rata-rata Gaji',
                    data: [previousYearAvg, currentYearAvg],
                    backgroundColor: [
                                'rgba(245, 158, 11, 0.8)',
                                'rgba(255, 64, 97, 0.8)'
                    ],
                            borderColor: [aegislabsColors.warning, aegislabsColors.primary],
                    borderWidth: 2,
                            borderRadius: 8,
                            borderSkipped: false,
                            hoverBackgroundColor: [aegislabsColors.warning, aegislabsColors.primary]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                                backgroundColor: 'rgba(44, 62, 80, 0.9)',
                                titleColor: '#ffffff',
                                bodyColor: '#ffffff',
                                borderColor: aegislabsColors.primary,
                                borderWidth: 1,
                                cornerRadius: 8,
                        callbacks: {
                            label: function(context) {
                                return 'Rata-rata: Rp ' + context.parsed.y.toLocaleString('id-ID');
                            },
                            afterLabel: function(context) {
                                if (context.dataIndex === 1 && previousYearAvg > 0) {
                                    const growth = ((currentYearAvg - previousYearAvg) / previousYearAvg) * 100;
                                    const sign = growth >= 0 ? '+' : '';
                                    return 'Pertumbuhan: ' + sign + growth.toFixed(1) + '%';
                                }
                                return '';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                                grid: {
                                    color: 'rgba(0,0,0,0.05)',
                                    drawBorder: false
                                },
                        ticks: {
                            callback: function(value) {
                                return 'Rp ' + value.toLocaleString('id-ID');
                                    },
                                    color: '#6c757d',
                                    font: {
                                        size: 11
                            }
                        },
                        grid: {
                            color: 'rgba(0,0,0,0.1)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                                },
                                ticks: {
                                    color: '#6c757d',
                                    font: {
                                        size: 11,
                                        weight: '500'
                                    }
                        }
                    }
                        },
                        animation: {
                            duration: 1500,
                            easing: 'easeInOutQuart'
                }
            }
        });

                // Enhanced interactions and animations
        Chart.defaults.animation.duration = 1500;
        Chart.defaults.animation.easing = 'easeInOutQuart';

                // Add hover effects to chart cards
                document.querySelectorAll('.chart-card').forEach(card => {
                card.addEventListener('mouseenter', function() {
                        this.style.transform = 'translateY(-3px)';
                        this.style.boxShadow = '0 15px 40px rgba(0, 0, 0, 0.15)';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                        this.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.1)';
        });

        // Add loading animation
        const showLoadingAnimation = () => {
            document.querySelectorAll('canvas').forEach(canvas => {
                const ctx = canvas.getContext('2d');
                ctx.fillStyle = '#f8f9fa';
                ctx.fillRect(0, 0, canvas.width, canvas.height);
                
                ctx.fillStyle = '#6c757d';
                ctx.font = '16px Arial';
                ctx.textAlign = 'center';
                ctx.fillText('Loading...', canvas.width / 2, canvas.height / 2);
            });
        };

                </text>
        }

            // Enhanced notification system
            function showNotification(message, type = 'info') {
                const alertClass = type === 'success' ? 'alert-success' : type === 'info' ? 'alert-info' : 'alert-danger';
                const icon = type === 'success' ? 'bi-check-circle-fill' : type === 'info' ? 'bi-info-circle-fill' : 'bi-exclamation-triangle-fill';
                
                const notification = `
                    <div class="alert ${alertClass} alert-dismissible fade show" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 350px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.2);">
                        <i class="bi ${icon}"></i> ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;

                $('body').append(notification);

                setTimeout(() => {
                    $('.alert').fadeOut();
                }, 4000);
    }

            // Export and Print Functions
    window.exportCharts = function() {
        // Implementation for exporting charts
        const charts = ['salaryTrendChart', 'compositionChart', 'growthChart', 'comparisonChart'];
        
        charts.forEach(chartId => {
            const canvas = document.getElementById(chartId);
            if (canvas) {
                        const url = canvas.toDataURL('image/png', 1.0);
                const link = document.createElement('a');
                        link.download = chartId + '_@@currentYear_' + new Date().getTime() + '.png';
                link.href = url;
                link.click();
            }
        });
        
        // Show success message
        showNotification('Charts exported successfully!', 'success');
    };

    window.printReport = function() {
        // Optimize for printing
        const originalTitle = document.title;
                document.title = 'Salary Analysis Report @currentYear - ' + new Date().toLocaleDateString();
        
        // Hide unnecessary elements
        document.querySelectorAll('.btn, .form-select, .dropdown').forEach(el => {
            el.style.display = 'none';
        });
        
        window.print();
        
        // Restore after print
        setTimeout(() => {
            document.title = originalTitle;
            document.querySelectorAll('.btn, .form-select, .dropdown').forEach(el => {
                el.style.display = '';
            });
        }, 1000);
    };

            // Show success message when data is loaded
            @if (Model != null && Model.Any())
            {
                <text>
        setTimeout(() => {
                    showNotification(`Analisis gaji untuk tahun @currentYear berhasil dimuat dengan @Model.Count data point`, 'success');
                }, 1000);
                </text>
            }

    // Responsive chart resize handler
    let resizeTimeout;
    window.addEventListener('resize', function() {
        clearTimeout(resizeTimeout);
        resizeTimeout = setTimeout(function() {
            Chart.helpers.each(Chart.instances, function(instance) {
                instance.resize();
            });
        }, 100);
    });

            // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey) {
            switch(e.key) {
                case 'p':
                    e.preventDefault();
                    printReport();
                    break;
                case 's':
                    e.preventDefault();
                    exportCharts();
                    break;
            }
        }
    });

            console.log('Aegislabs Salary Analytics initialized successfully!');
});

        // Global utility functions
        window.showNotification = function(message, type = 'info') {
            const alertClass = type === 'success' ? 'alert-success' : type === 'info' ? 'alert-info' : 'alert-danger';
            const icon = type === 'success' ? 'bi-check-circle-fill' : type === 'info' ? 'bi-info-circle-fill' : 'bi-exclamation-triangle-fill';
            
            const notification = `
                <div class="alert ${alertClass} alert-dismissible fade show" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 350px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.2);">
                    <i class="bi ${icon}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            
            document.body.insertAdjacentHTML('beforeend', notification);
            
            setTimeout(() => {
                const alerts = document.querySelectorAll('.alert');
                alerts[alerts.length - 1]?.remove();
            }, 4000);
        };
</script>
}