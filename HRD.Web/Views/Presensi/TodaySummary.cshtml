@{
    ViewData["Title"] = "Ringkasan Presensi Hari Ini - HRD";
}

<!-- Custom CSS untuk Today Summary Presensi HRD -->
<style>
    /* Aegislabs Theme Variables */
    :root {
        --aegis-red: #ff4061;
        --aegis-white: #ffffff;
        --aegis-red-hover: #e5395a;
        --aegis-red-light: rgba(255, 64, 97, 0.1);
        --aegis-red-shadow: rgba(255, 64, 97, 0.3);
        --aegis-dark: #2c3e50;
        --aegis-gray: #f8f9fa;
        --aegis-green: #10b981;
        --aegis-orange: #f59e0b;
        --aegis-blue: #3b82f6;
    }

    /* Main Container */
    .presensi-container {
        background: linear-gradient(135deg, var(--aegis-gray), #e9ecef);
        min-height: 100vh;
        padding: 2rem 0;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--aegis-red), #ff6b85);
        color: var(--aegis-white);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px var(--aegis-red-shadow);
        position: relative;
        overflow: hidden;
    }

        .page-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -20%;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            transform: scale(0.8);
        }

        .page-header h1 {
            margin: 0;
            font-size: 2rem;
            font-weight: 700;
            position: relative;
            z-index: 2;
        }

        .page-header p {
            margin: 0.75rem 0 0 0;
            opacity: 0.9;
            font-size: 1rem;
            position: relative;
            z-index: 2;
        }

        .page-header i {
            font-size: 2.2rem;
            margin-right: 0.75rem;
            position: relative;
            z-index: 2;
        }

    /* Stats Cards */
    .stats-card {
        background: var(--aegis-white);
        border-radius: 15px;
        border: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
        height: 100%;
    }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

    .stats-card-body {
        padding: 1.5rem;
        position: relative;
        z-index: 2;
    }

    .stats-card.total {
        background: linear-gradient(135deg, var(--aegis-red), #ff6b85);
        color: var(--aegis-white);
    }

    .stats-card.hadir {
        background: linear-gradient(135deg, var(--aegis-green), #059669);
        color: var(--aegis-white);
    }

    .stats-card.terlambat {
        background: linear-gradient(135deg, var(--aegis-orange), #d97706);
        color: var(--aegis-white);
    }

    .stats-card.belum-clock-out {
        background: linear-gradient(135deg, var(--aegis-blue), #2563eb);
        color: var(--aegis-white);
    }

    .stats-icon {
        font-size: 2.5rem;
        opacity: 0.9;
    }

    .stats-number {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
    }

    .stats-label {
        font-size: 0.85rem;
        margin: 0;
        opacity: 0.9;
    }

    /* Filter Section */
    .filter-card {
        background: var(--aegis-white);
        border-radius: 15px;
        border: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 2rem;
    }

        .filter-card .card-body {
            padding: 1.5rem;
        }

    .form-label {
        font-weight: 600;
        color: var(--aegis-dark);
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }

    .form-control, .form-select {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--aegis-red);
            box-shadow: 0 0 0 0.2rem var(--aegis-red-light);
        }

    .btn-filter {
        background: linear-gradient(135deg, var(--aegis-red), #ff6b85);
        border: none;
        border-radius: 8px;
        color: white;
        padding: 0.5rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px var(--aegis-red-shadow);
        font-size: 0.9rem;
    }

        .btn-filter:hover {
            background: linear-gradient(135deg, var(--aegis-red-hover), #e5395a);
            transform: translateY(-2px);
            color: white;
            box-shadow: 0 6px 20px var(--aegis-red-shadow);
        }

    .btn-refresh {
        background: transparent;
        border: 2px solid var(--aegis-blue);
        color: var(--aegis-blue);
        border-radius: 8px;
        padding: 0.5rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

        .btn-refresh:hover {
            background: var(--aegis-blue);
            color: white;
            transform: translateY(-2px);
        }

    /* Main Table Card */
    .table-card {
        background: var(--aegis-white);
        border-radius: 20px;
        border: none;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .table-card-header {
        background: var(--aegis-red-light);
        color: var(--aegis-red);
        padding: 1.5rem 2rem;
        border-bottom: 1px solid rgba(255, 64, 97, 0.2);
        font-weight: 600;
        font-size: 1.1rem;
    }

    /* Custom Table Styling */
    .custom-table {
        margin: 0;
    }

        .custom-table thead th {
            background: var(--aegis-red-light);
            color: var(--aegis-red);
            border: none;
            padding: 1rem;
            font-weight: 600;
            font-size: 0.85rem;
            text-align: center;
        }

        .custom-table tbody td {
            border: none;
            padding: 1rem 0.75rem;
            vertical-align: middle;
            border-bottom: 1px solid #f8f9fa;
            text-align: center;
            font-size: 0.9rem;
        }

        .custom-table tbody tr:hover {
            background: var(--aegis-red-light);
        }

        .custom-table tbody tr:last-child td {
            border-bottom: none;
        }

    /* Employee Info Display */
    .employee-info {
        text-align: left;
    }

    .employee-name {
        font-weight: 600;
        color: var(--aegis-dark);
        font-size: 0.95rem;
    }

    .employee-details {
        font-size: 0.8rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    /* Status Badges */
    .status-badge {
        padding: 0.375rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
    }

    .status-hadir {
        background: #dcfce7;
        color: #059669;
        border: 1px solid #bbf7d0;
    }

    .status-terlambat {
        background: #fef3c7;
        color: #d97706;
        border: 1px solid #fed7aa;
    }

    .status-belum-clock-out {
        background: #dbeafe;
        color: #2563eb;
        border: 1px solid #bfdbfe;
    }

    /* Time Display */
    .time-display {
        text-align: left;
    }

    .time-value {
        font-weight: 600;
        color: var(--aegis-dark);
        font-size: 0.9rem;
    }

    .time-label {
        font-size: 0.75rem;
        color: #6c757d;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: var(--aegis-white);
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

        .empty-state::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, var(--aegis-red), #ff6b85);
        }

        .empty-state i {
            font-size: 5rem;
            color: #dee2e6;
            margin-bottom: 1.5rem;
        }

        .empty-state h4 {
            color: var(--aegis-dark);
            margin-bottom: 1rem;
            font-weight: 600;
        }

        .empty-state p {
            color: #6c757d;
            margin: 0;
            font-size: 1.1rem;
        }

    /* Current Time Display */
    .current-time {
        background: linear-gradient(135deg, var(--aegis-dark), #34495e);
        color: var(--aegis-white);
        border-radius: 15px;
        padding: 1rem 1.5rem;
        margin-bottom: 2rem;
        text-align: center;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

        .current-time .time {
            font-size: 1.5rem;
            font-weight: 700;
            margin: 0;
        }

        .current-time .date {
            font-size: 0.9rem;
            opacity: 0.8;
            margin: 0;
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .presensi-container

    {
        padding: 1rem 0;
    }

    .page-header {
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }

        .page-header h1 {
            font-size: 1.5rem;
        }

    .stats-card-body {
        padding: 1rem;
    }

    .stats-number {
        font-size: 1.75rem;
    }

    .custom-table {
        font-size: 0.8rem;
    }

        .custom-table thead th,
        .custom-table tbody td {
            padding: 0.5rem 0.25rem;
        }

    .employee-info {
        text-align: center;
    }

    .time-display {
        text-align: center;
    }

    .empty-state {
        padding: 2rem 1rem;
    }

    }

    /* Animation */
    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .animate-in {
        animation: fadeInUp 0.6s ease-out;
    }

    /* Grid Layout for Stats */
    .col-lg-2-4 {
        flex: 0 0 auto;
        width: 20%;
    }

    @@media (max-width: 991.98px) {
        .col-lg-2-4

    {
        width: 50%;
    }

    }

    @@media (max-width: 575.98px) {
        .col-lg-2-4

    {
        width: 100%;
    }

    }

    /* Loading Animation */
    .loading {
        opacity: 0.6;
        pointer-events: none;
    }

        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid var(--aegis-red);
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s linear infinite;
        }

    @@keyframes spin {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }
</style>

<div class="presensi-container">
    <div class="container-fluid px-4">
        <!-- Page Header -->
        <div class="page-header animate-in">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1>
                        <i class="bi bi-clock-history"></i>
                        Ringkasan Presensi Hari Ini
                    </h1>
                    <p>Monitoring kehadiran karyawan Aegislabs real-time</p>
                </div>
            </div>
        </div>

        <!-- Current Time Display -->
        <div class="current-time animate-in" style="animation-delay: 0.1s;">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h3 class="time" id="currentTime">--:--:--</h3>
                </div>
                <div class="col-md-6">
                    <p class="date" id="currentDate">Loading...</p>
                </div>
            </div>
        </div>

        <!-- Stats Cards -->
        <div class="row mb-4">
            <div class="col-lg-2-4 col-md-6 mb-3">
                <div class="card stats-card total animate-in" style="animation-delay: 0.2s;">
                    <div class="stats-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="stats-number" id="totalKaryawan">0</h4>
                                <p class="stats-label">Total Karyawan</p>
                            </div>
                            <div>
                                <i class="bi bi-people-fill stats-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-2-4 col-md-6 mb-3">
                <div class="card stats-card hadir animate-in" style="animation-delay: 0.3s;">
                    <div class="stats-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="stats-number" id="sudahClockIn">0</h4>
                                <p class="stats-label">Sudah Clock In</p>
                            </div>
                            <div>
                                <i class="bi bi-check-circle-fill stats-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-2-4 col-md-6 mb-3">
                <div class="card stats-card terlambat animate-in" style="animation-delay: 0.4s;">
                    <div class="stats-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="stats-number" id="terlambat">0</h4>
                                <p class="stats-label">Terlambat</p>
                            </div>
                            <div>
                                <i class="bi bi-exclamation-triangle-fill stats-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-2-4 col-md-6 mb-3">
                <div class="card stats-card belum-clock-out animate-in" style="animation-delay: 0.5s;">
                    <div class="stats-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="stats-number" id="belumClockOut">0</h4>
                                <p class="stats-label">Belum Clock Out</p>
                            </div>
                            <div>
                                <i class="bi bi-clock-fill stats-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-2-4 col-md-6 mb-3">
                <div class="card stats-card animate-in" style="animation-delay: 0.6s; background: linear-gradient(135deg, #6366f1, #4f46e5); color: white;">
                    <div class="stats-card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="stats-number" id="belumClockIn">0</h4>
                                <p class="stats-label">Belum Clock In</p>
                            </div>
                            <div>
                                <i class="bi bi-person-x-fill stats-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Section -->
        <div class="card filter-card animate-in" style="animation-delay: 0.7s;">
            <div class="card-body">
                <form id="filterForm" class="row g-3">
                    <div class="col-md-6">
                        <label for="filterTanggal" class="form-label">Filter Tanggal</label>
                        <input type="date" class="form-control" id="filterTanggal">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">&nbsp;</label>
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-filter" onclick="loadTodaySummary()">
                                <i class="bi bi-search"></i> Filter
                            </button>
                            <button type="button" class="btn btn-refresh" onclick="refreshData()">
                                <i class="bi bi-arrow-clockwise"></i> Refresh
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Main Table -->
        <div class="card table-card animate-in" style="animation-delay: 0.8s;" id="tableCard">
            <div class="table-card-header">
                <h5 class="mb-0">
                    <i class="bi bi-table"></i>
                    Daftar Karyawan Hadir Hari Ini (<span id="displayCount">0</span> karyawan)
                </h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table custom-table" id="presensiTable">
                        <thead>
                            <tr>
                                <th style="width: 25%;">Karyawan</th>
                                <th style="width: 15%;">Jam Masuk</th>
                                <th style="width: 15%;">Jam Keluar</th>
                                <th style="width: 15%;">Total Jam</th>
                                <th style="width: 15%;">Status</th>
                                <th style="width: 15%;">Metode</th>
                            </tr>
                        </thead>
                        <tbody id="presensiTableBody">
                            <!-- Data akan diisi oleh JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Empty State -->
        <div class="empty-state animate-in" style="animation-delay: 0.8s; display: none;" id="emptyState">
            <i class="bi bi-person-x"></i>
            <h4>Belum Ada Karyawan yang Clock In</h4>
            <p>Belum ada karyawan yang melakukan clock in hari ini. Data akan muncul setelah karyawan clock in.</p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Global variables
        let currentData = null;
        let refreshInterval = null;

        $(document).ready(function() {
            // Initialize
            updateCurrentTime();
            setCurrentDate();
            loadTodaySummary();

            // Start auto refresh every 30 seconds
            refreshInterval = setInterval(refreshData, 30000);

            // Update time every second
            setInterval(updateCurrentTime, 1000);
        });

        // Update current time display
        function updateCurrentTime() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('id-ID', {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            });
            document.getElementById('currentTime').textContent = timeString;
        }

        // Set current date
        function setCurrentDate() {
            const now = new Date();
            const dateString = now.toLocaleDateString('id-ID', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            document.getElementById('currentDate').textContent = dateString;

            // Set filter date to today
            const today = now.toISOString().split('T')[0];
            document.getElementById('filterTanggal').value = today;
        }

        // Load today summary data
                // Load today summary data - FIXED VERSION
        function loadTodaySummary() {
            const filterDate = document.getElementById('filterTanggal').value;

            // FIXED: Use Web Controller instead of direct API call
            let url = '@Url.Action("GetTodaySummaryData", "Presensi")';

            if (filterDate) {
                url += `?date=${filterDate}`;
            }

            console.log('Calling URL:', url);

            // Show loading state
            showLoading();

            fetch(url, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                console.log('Response status:', response.status);
                console.log('Response ok:', response.ok);

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Response data:', data);

                if (data.success) {
                    currentData = data.data;
                    updateStats(data.data);
                    renderTable(data.data.karyawanHadir || []);
                    showNotification('Data berhasil dimuat', 'success');
                } else {
                    showNotification(data.message || 'Gagal memuat data', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification(`Terjadi kesalahan: ${error.message}`, 'error');
            })
            .finally(() => {
                hideLoading();
            });
        }

        // Update statistics cards
        function updateStats(data) {
            document.getElementById('totalKaryawan').textContent = data.totalKaryawan || 0;
            document.getElementById('sudahClockIn').textContent = data.sudahClockIn || 0;
            document.getElementById('terlambat').textContent = data.terlambat || 0;
            document.getElementById('belumClockOut').textContent = data.belumClockOut || 0;
            document.getElementById('belumClockIn').textContent = data.belumClockIn || 0;
        }

        // Render table data
        function renderTable(karyawanHadir) {
            const tbody = document.getElementById('presensiTableBody');
            const tableCard = document.getElementById('tableCard');
            const emptyState = document.getElementById('emptyState');
            const displayCount = document.getElementById('displayCount');

            tbody.innerHTML = '';

            if (karyawanHadir.length === 0) {
                tableCard.style.display = 'none';
                emptyState.style.display = 'block';
                displayCount.textContent = '0';
                return;
            }

            tableCard.style.display = 'block';
            emptyState.style.display = 'none';
            displayCount.textContent = karyawanHadir.length;

            karyawanHadir.forEach(karyawan => {
                const row = createTableRow(karyawan);
                tbody.appendChild(row);
            });
        }

        // Create table row
        function createTableRow(karyawan) {
            const row = document.createElement('tr');

            // Format times
            const jamMasuk = karyawan.jamMasuk ?
                new Date(karyawan.jamMasuk).toLocaleTimeString('id-ID', {
                    hour: '2-digit',
                    minute: '2-digit'
                }) : '-';

            const jamKeluar = karyawan.jamKeluar ?
                new Date(karyawan.jamKeluar).toLocaleTimeString('id-ID', {
                    hour: '2-digit',
                    minute: '2-digit'
                }) : '-';

            // Calculate total hours
            let totalJam = '-';
            if (karyawan.jamMasuk && karyawan.jamKeluar) {
                const masuk = new Date(karyawan.jamMasuk);
                const keluar = new Date(karyawan.jamKeluar);
                const diffMs = keluar - masuk;
                const diffHours = diffMs / (1000 * 60 * 60);
                totalJam = diffHours.toFixed(1) + ' jam';
            }

            // Status badge
            let statusBadge = '';
            switch (karyawan.status) {
                case 'Hadir':
                    statusBadge = '<span class="status-badge status-hadir"><i class="bi bi-check-circle"></i> Hadir</span>';
                    break;
                case 'Terlambat':
                    statusBadge = '<span class="status-badge status-terlambat"><i class="bi bi-exclamation-triangle"></i> Terlambat</span>';
                    break;
                default:
                    statusBadge = '<span class="status-badge status-belum-clock-out"><i class="bi bi-clock"></i> ' + (karyawan.status || 'Unknown') + '</span>';
            }

            row.innerHTML = `
                <td>
                    <div class="employee-info">
                        <div class="employee-name">${karyawan.nama || 'N/A'}</div>
                        <div class="employee-details">NIK: ${karyawan.nik || 'N/A'}</div>
                    </div>
                </td>
                <td>
                    <div class="time-display">
                        <div class="time-value">${jamMasuk}</div>
                        <div class="time-label">Clock In</div>
                    </div>
                </td>
                <td>
                    <div class="time-display">
                        <div class="time-value">${jamKeluar}</div>
                        <div class="time-label">Clock Out</div>
                    </div>
                </td>
                <td>
                    <div class="time-display">
                        <div class="time-value">${totalJam}</div>
                        <div class="time-label">Jam Kerja</div>
                    </div>
                </td>
                <td>${statusBadge}</td>
                <td>
                    <span class="badge bg-light text-dark">Web</span>
                </td>
            `;

            return row;
        }

        // Refresh data
        function refreshData() {
            loadTodaySummary();
        }

        // Show loading state
        function showLoading() {
            const tableCard = document.getElementById('tableCard');
            tableCard.classList.add('loading');
        }

        // Hide loading state
        function hideLoading() {
            const tableCard = document.getElementById('tableCard');
            tableCard.classList.remove('loading');
        }

        // Get auth token (implement based on your auth system)
        function getAuthToken() {
            // Return JWT token from localStorage, sessionStorage, or cookie
            return localStorage.getItem('authToken') ||
                   sessionStorage.getItem('authToken') ||
                   getCookie('authToken') || '';
        }

        // Get cookie value
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
            return '';
        }

        // Show notification
        function showNotification(message, type = 'info') {
            const alertClass = type === 'success' ? 'alert-success' : type === 'error' ? 'alert-danger' : 'alert-info';
            const icon = type === 'success' ? 'bi-check-circle-fill' : type === 'error' ? 'bi-exclamation-triangle-fill' : 'bi-info-circle-fill';

            const notification = `
                <div class="alert ${alertClass} alert-dismissible fade show" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 350px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.2);">
                    <i class="bi ${icon}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            document.body.insertAdjacentHTML('beforeend', notification);

            setTimeout(() => {
                const alerts = document.querySelectorAll('.alert');
                alerts[alerts.length - 1]?.remove();
            }, 4000);
        }

        // Cleanup on page unload
        window.addEventListener('beforeunload', function() {
            if (refreshInterval) {
                clearInterval(refreshInterval);
            }
        });
    </script>
}